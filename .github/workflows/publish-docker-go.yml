on:
  workflow_call:
    inputs:
      go-version:
        required: false
        type: string
        default: "1.18.x"
      goprivate:
        required: true
        type: string
      docker-image-prefix:
        required: true
        type: string
      aws-region:
        required: true
        type: string
      aws-account-id:
        required: true
        type: string
    secrets:
      aws-access-key-id:
        required: true
      aws-secret-access-key:
        required: true
      github-token:
        required: true
      alerts-slack-webhook-url:
        required: true

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Go
        uses: actions/setup-go@v3
        with:
          go-version: ${{ inputs.go-version }}

      - name: Read .SEMVER file
        id: getversion
        run: |
          echo "::set-output name=patch::$(cat .SEMVER)"
          echo "::set-output name=minor::$(cat .SEMVER | sed 's/\.[0-9]*$//g')"
          echo "::set-output name=major::$(cat .SEMVER | sed 's/\.[0-9]*\.[0-9]*$//g')"

      - name: Setup for private repo Go modules
        env:
          GOPRIVATE: ${{ inputs.goprivate }}
          TOKEN: ${{ secrets.github-token }}
        run: |
          git config --global url."https://${TOKEN}:x-oauth-basic@github.com".insteadOf "https://github.com"
          go mod download
          go mod vendor

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.aws-access-key-id }}
          aws-secret-access-key: ${{ secrets.aws-secret-access-key }}
          aws-region: ${{ inputs.aws-region }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Docker build
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: |
            ${{ steps.login-ecr.outputs.registry }}/${{ inputs.docker-image-prefix }}${{ github.event.repository.name }}:latest
            ${{ steps.login-ecr.outputs.registry }}/${{ inputs.docker-image-prefix }}${{ github.event.repository.name }}:${{ github.sha }}
            ${{ steps.login-ecr.outputs.registry }}/${{ inputs.docker-image-prefix }}${{ github.event.repository.name }}:${{ steps.getversion.outputs.patch }}
            ${{ steps.login-ecr.outputs.registry }}/${{ inputs.docker-image-prefix }}${{ github.event.repository.name }}:${{ steps.getversion.outputs.minor }}
            ${{ steps.login-ecr.outputs.registry }}/${{ inputs.docker-image-prefix }}${{ github.event.repository.name }}:${{ steps.getversion.outputs.major }}
          build-args: |
            aws_account_id=${{ inputs.aws-account-id }}

      - name: Alert Slack of failure
        uses: slackapi/slack-github-action@v1.21
        if: failure()
        with:
          payload: |
            {
              "github_repository": "${{ github.event.repository.name }}",
              "workflow": "${{ github.workflow }}",
              "action_url": "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}", 
              "status": "${{ job.status }}"
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.alerts-slack-webhook-url }}