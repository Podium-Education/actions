on:
  workflow_call:
    inputs:
      aws-region:
        required: true
        type: string
    secrets:
      aws-account-id:
        required: true
      aws-access-key-id:
        required: true
      aws-secret-access-key:
        required: true
      github-token:
        required: true
      alerts-slack-webhook-url:
        required: true

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Read .SEMVER file
      id: getversion
      run: echo "::set-output name=version::$(cat .SEMVER)"

    - name: Setup for private repo
      env:
        TOKEN: ${{ secrets.github-token }}
      run: |
        pip install wheel
        sed "s/git+ssh:\/\/git@github.com/git+https:\/\/${TOKEN}:x-oauth-basic@github.com/g"  requirements.txt > requirements_updated.txt
        mv requirements_updated.txt requirements.txt
        pip wheel --wheel-dir=wheels -r requirements.txt
        pip install wheel

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.aws-access-key-id }}
        aws-secret-access-key: ${{ secrets.aws-secret-access-key }}
        aws-region: ${{ inputs.aws-region }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Docker build
      uses: docker/build-push-action@v3
      with:
        context: .
        push: false
        tags: |
          local/${{ github.event.repository.name }}:latest
        build-args: |
          aws_account_id=${{ secrets.aws-account-id }}

    - name: Alert Slack of failure
      uses: slackapi/slack-github-action@v1.19
      if: failure()
      with:
        payload: |
          {
            "github_repository": "${{ github.event.repository.name }}",
            "workflow": "${{ github.workflow }}",
            "action_url": "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}", 
            "status": "${{ job.status }}"
          }
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.alerts-slack-webhook-url }}